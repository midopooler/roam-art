{
    "properties": [
        {
            "canonicalName": "BaseColor",
            "aliases": [
                "_BaseColor",
                "_AlbedoColor",
                "_Color"
            ],
            "propertyType": "Color",
            "description": "The base color of the material",
            "defaultValue": "(1,1,1,1)",
            "usageNotes": "This is the primary color of the material. In Toony Colors Pro, it's the main color that interacts with lighting. In FlatKit, it's the base color that can be modified by cel shading modes. For MK Toon, it's the main albedo color that interacts with the physically based workflow.\n\nVisual Characteristics:\n- At full opacity (alpha=1), the color appears solid and opaque\n- At lower opacity values, the color becomes translucent\n- When used with cel shading (FlatKit/Toony Colors), the color can be modified by the cel shading gradient\n- In MK Toon's metallic workflow, this color interacts with the metallic value to create a metallic appearance"
        },
        {
            "canonicalName": "BaseMap",
            "aliases": [
                "_BaseMap",
                "_AlbedoMap",
                "_MainTex"
            ],
            "propertyType": "2D",
            "description": "The base texture map",
            "defaultValue": "white",
            "usageNotes": "This is the main texture that provides the surface detail for the material.\n\nVisual Characteristics:\n- In Toony Colors Pro, this texture can be used with the albedo channel for base color\n- In FlatKit, it can be used with cel shading to create stylized effects\n- In MK Toon, it interacts with the metallic and smoothness maps to create PBR effects\n- When using alpha clipping, the alpha channel of this texture determines the transparent areas"
        },
        {
            "canonicalName": "Metallic",
            "aliases": [
                "_Metallic",
                "_MetallicMap"
            ],
            "propertyType": "Float",
            "description": "Controls the metallic appearance of the material",
            "defaultValue": "0.0",
            "usageNotes": "This value determines how metallic the material appears.\n\nVisual Characteristics:\n- At 0: The material appears non-metallic with typical diffuse reflection\n- At 1: The material appears highly metallic with strong specular highlights\n- In MK Toon's workflow, this value interacts with the smoothness value to create different metallic finishes\n- In Toony Colors Pro, this can be used to create stylized metallic effects when combined with cel shading"
        },
        {
            "canonicalName": "Smoothness",
            "aliases": [
                "_Smoothness",
                "_Glossiness"
            ],
            "propertyType": "Float",
            "description": "Controls the surface smoothness",
            "defaultValue": "1.0",
            "usageNotes": "This value determines how smooth or rough the material appears.\n\nVisual Characteristics:\n- At 0: The material appears very rough with diffuse lighting\n- At 1: The material appears very smooth with strong specular highlights\n- In MK Toon's workflow, this interacts with metallic to create different material finishes\n- In Toony Colors Pro, this can be used to control the size and intensity of specular highlights"
        },
        {
            "canonicalName": "Roughness",
            "aliases": [
                "_Roughness",
                "_RoughnessMap"
            ],
            "propertyType": "Float",
            "description": "Controls the surface roughness",
            "defaultValue": "0.5",
            "usageNotes": "This value is an alternative to smoothness, with higher values indicating rougher surfaces.\n\nVisual Characteristics:\n- At 0: The material appears very smooth with strong specular highlights\n- At 1: The material appears very rough with diffuse lighting\n- In MK Toon's roughness workflow, this provides a more intuitive control over surface roughness\n- In Toony Colors Pro, this can be used to create stylized roughness effects"
        },
        {
            "canonicalName": "SpecularColor",
            "aliases": [
                "_SpecularColor",
                "_HColor",
                "_SpecularColor"
            ],
            "propertyType": "Color",
            "description": "The color of specular highlights",
            "defaultValue": "(0.75,0.75,0.75,1)",
            "usageNotes": "This color determines the appearance of specular highlights on the material.\n\nVisual Characteristics:\n- In MK Toon's specular workflow, this color appears in the highlight areas\n- In Toony Colors Pro, this can be used to create stylized specular effects\n- The alpha value controls the intensity of the specular highlight\n- When combined with smoothness, it creates different highlight sizes and intensities"
        },
        {
            "canonicalName": "SpecularMap",
            "aliases": [
                "_SpecularMap",
                "_SpecGlossMap"
            ],
            "propertyType": "2D",
            "description": "The specular map",
            "defaultValue": "white",
            "usageNotes": "This texture controls the distribution of specular highlights across the surface.\n\nVisual Characteristics:\n- White areas in the texture correspond to full specular intensity\n- Black areas correspond to no specular reflection\n- In MK Toon, this can be used to create detailed specular patterns\n- In Toony Colors Pro, this can be used to create stylized specular effects"
        },
        {
            "canonicalName": "NormalMap",
            "aliases": [
                "_NormalMap",
                "_BumpMap"
            ],
            "propertyType": "2D",
            "description": "The normal map",
            "defaultValue": "bump",
            "usageNotes": "This texture provides surface detail through normal mapping.\n\nVisual Characteristics:\n- In MK Toon, this creates detailed surface detail with proper lighting\n- In FlatKit, this can be used to enhance the cel shading effect\n- In Toony Colors Pro, this can be used to create stylized surface detail\n- The intensity of the normal map can be controlled by the NormalMapIntensity property"
        },
        {
            "canonicalName": "NormalMapIntensity",
            "aliases": [
                "_NormalMapIntensity",
                "_BumpScale"
            ],
            "propertyType": "Float",
            "description": "Controls the intensity of the normal map",
            "defaultValue": "1.0",
            "usageNotes": "This value determines how strong the normal map effect appears.\n\nVisual Characteristics:\n- At 0: The normal map has no effect\n- At 1: The normal map has its full effect\n- Values greater than 1 can create exaggerated surface detail\n- This is particularly useful in stylized shaders to enhance the visual effect"
        },
        {
            "canonicalName": "EmissionColor",
            "aliases": [
                "_EmissionColor",
                "_EmissionColor"
            ],
            "propertyType": "Color",
            "description": "The color of emission",
            "defaultValue": "(0,0,0,1)",
            "usageNotes": "This color determines the glow effect of the material.\n\nVisual Characteristics:\n- In Toony Colors Pro, this creates a stylized glow effect\n- In FlatKit, this can be used to create glowing cel effects\n- The alpha value controls the intensity of the emission\n- When combined with an emission map, it creates detailed glowing areas"
        },
        {
            "canonicalName": "EmissionMap",
            "aliases": [
                "_EmissionMap",
                "_EmissionMap"
            ],
            "propertyType": "2D",
            "description": "The emission map",
            "defaultValue": "white",
            "usageNotes": "This texture controls where emission appears on the surface.\n\nVisual Characteristics:\n- White areas in the texture correspond to full emission intensity\n- Black areas correspond to no emission\n- In Toony Colors Pro, this can be used to create stylized glowing effects\n- In FlatKit, this can be used to create glowing cel effects"
        },
        {
            "canonicalName": "RimColor",
            "aliases": [
                "_RimColor",
                "_FlatRimColor",
                "_RimColor"
            ],
            "propertyType": "Color",
            "description": "The color of the rim light",
            "defaultValue": "(0.8,0.8,0.8,0.5)",
            "usageNotes": "This color determines the appearance of the rim light effect.\n\nVisual Characteristics:\n- In Toony Colors Pro, this creates a stylized rim light effect\n- In FlatKit, this can be used to create cel-style rim effects\n- The alpha value controls the intensity of the rim light\n- When combined with RimSize, it creates different rim light widths"
        },
        {
            "canonicalName": "RimSize",
            "aliases": [
                "_RimSize",
                "_FlatRimSize",
                "_RimMin"
            ],
            "propertyType": "Float",
            "description": "Controls the size of the rim light",
            "defaultValue": "0.5",
            "usageNotes": "This value determines how wide the rim light effect appears.\n\nVisual Characteristics:\n- At 0: The rim light is very thin\n- At 1: The rim light is very wide\n- In FlatKit, this can be used to create cel-style rim effects\n- In Toony Colors Pro, this can be used to create stylized rim effects"
        },
        {
            "canonicalName": "OutlineColor",
            "aliases": [
                "_OutlineColor",
                "_OutlineColor"
            ],
            "propertyType": "Color",
            "description": "The color of the outline",
            "defaultValue": "(0,0,0,1)",
            "usageNotes": "This color determines the appearance of the outline effect.\n\nVisual Characteristics:\n- In Toony Colors Pro, this creates a stylized outline effect\n- In FlatKit, this can be used to create cel-style outlines\n- The alpha value controls the intensity of the outline\n- When combined with OutlineSize, it creates different outline widths"
        },
        {
            "canonicalName": "OutlineSize",
            "aliases": [
                "_OutlineSize",
                "_OutlineWidth"
            ],
            "propertyType": "Float",
            "description": "Controls the size of the outline",
            "defaultValue": "1.0",
            "usageNotes": "This value determines how thick the outline appears.\n\nVisual Characteristics:\n- At 0: The outline is very thin\n- At higher values: The outline becomes thicker\n- In FlatKit, this can be used to create cel-style outlines\n- In Toony Colors Pro, this can be used to create stylized outline effects"
        },
        {
            "canonicalName": "CelShadingMode",
            "aliases": [
                "_CelPrimaryMode",
                "_RampType"
            ],
            "propertyType": "Enum",
            "description": "The cel shading mode",
            "defaultValue": "0",
            "usageNotes": "This determines the type of cel shading effect.\n\nVisual Characteristics:\n- None: Creates a flat look with no cel shading\n- Single [Cel]: Creates a single cel effect\n- Steps: Creates multiple cel steps\n- Gradient: Creates a gradient cel effect\n- In FlatKit, this can be used to create various cel shading styles\n- In Toony Colors Pro, this can be used to create stylized cel effects"
        },
        {
            "canonicalName": "LightTransmissionColor",
            "aliases": [
                "_LightTransmissionColor",
                "_LightTransmissionColor"
            ],
            "propertyType": "Color",
            "description": "The color of light transmission",
            "defaultValue": "(1,0.65,0,1)",
            "usageNotes": "This color determines how light passes through the material.\n\nVisual Characteristics:\n- In Toony Colors Pro, this creates a stylized light transmission effect\n- The alpha value controls the intensity of the transmission\n- When combined with other properties, it creates different transmission effects"
        },
        {
            "canonicalName": "AlphaCutoff",
            "aliases": [
                "_AlphaCutoff",
                "_Cutoff"
            ],
            "propertyType": "Float",
            "description": "Controls the alpha cutoff threshold for transparency",
            "defaultValue": "0.5",
            "usageNotes": "Determines the threshold at which pixels are considered transparent. 0 means fully transparent, 1 means fully opaque."
        },
        {
            "canonicalName": "RampThreshold",
            "aliases": [
                "_RampThreshold"
            ],
            "propertyType": "Float",
            "description": "Controls the threshold for cel shading ramp",
            "defaultValue": "0.75",
            "usageNotes": "Determines where the light-to-dark transition occurs in the cel shading effect."
        },
        {
            "canonicalName": "RampSmoothing",
            "aliases": [
                "_RampSmoothing"
            ],
            "propertyType": "Float",
            "description": "Controls the smoothing of cel shading ramp",
            "defaultValue": "0.1",
            "usageNotes": "Determines how gradual the transition between light and dark areas is in cel shading."
        },
        {
            "canonicalName": "RampBands",
            "aliases": [
                "_RampBands"
            ],
            "propertyType": "Int",
            "description": "Controls the number of bands in cel shading",
            "defaultValue": "4",
            "usageNotes": "Determines how many distinct light levels to show in the cel shading effect."
        },
        {
            "canonicalName": "RampBandsSmoothing",
            "aliases": [
                "_RampBandsSmoothing"
            ],
            "propertyType": "Float",
            "description": "Controls the smoothing between bands in cel shading",
            "defaultValue": "0.1",
            "usageNotes": "Determines how gradual the transitions between bands are in cel shading."
        },
        {
            "canonicalName": "ShadowColor",
            "aliases": [
                "_SColor",
                "_ShadowColor"
            ],
            "propertyType": "Color",
            "description": "The color of shadows",
            "defaultValue": "(0.2,0.2,0.2,1)",
            "usageNotes": "Defines the color of the material's shadow areas."
        },
        {
            "canonicalName": "ShadowTexture",
            "aliases": [
                "_ShadowBaseMap"
            ],
            "propertyType": "2D",
            "description": "Shadow texture map",
            "defaultValue": "gray",
            "usageNotes": "Texture that defines variations in shadow color across the surface."
        },
        {
            "canonicalName": "SpecularSize",
            "aliases": [
                "_SpecularToonSize",
                "_FlatSpecularSize"
            ],
            "propertyType": "Float",
            "description": "Controls the size of specular highlights",
            "defaultValue": "0.25",
            "usageNotes": "Determines how large the specular highlights appear on the surface."
        },
        {
            "canonicalName": "SpecularSmoothness",
            "aliases": [
                "_SpecularToonSmoothness",
                "_FlatSpecularEdgeSmoothness"
            ],
            "propertyType": "Float",
            "description": "Controls the smoothness of specular highlights",
            "defaultValue": "0.05",
            "usageNotes": "Determines how gradual the edges of specular highlights are."
        },
        {
            "canonicalName": "SpecularRoughness",
            "aliases": [
                "_SpecularRoughness"
            ],
            "propertyType": "Float",
            "description": "Controls the roughness of specular highlights",
            "defaultValue": "0.5",
            "usageNotes": "Determines how spread out the specular highlights appear."
        },
        {
            "canonicalName": "RimMax",
            "aliases": [
                "_RimMax"
            ],
            "propertyType": "Float",
            "description": "Controls the maximum intensity of rim lighting",
            "defaultValue": "1",
            "usageNotes": "Determines the brightest possible intensity of the rim lighting effect."
        },
        {
            "canonicalName": "RimLightMask",
            "aliases": [
                "_UseRimLightMask"
            ],
            "propertyType": "Boolean",
            "description": "Controls whether to use light-based masking for rim lighting",
            "defaultValue": "1",
            "usageNotes": "When enabled, rim lighting is affected by light direction and intensity."
        },
        {
            "canonicalName": "MatCapColor",
            "aliases": [
                "_MatCapColor"
            ],
            "propertyType": "Color",
            "description": "The color of matcap effect",
            "defaultValue": "(1,1,1,1)",
            "usageNotes": "Defines the color of the matcap overlay effect."
        },
        {
            "canonicalName": "MatCapTexture",
            "aliases": [
                "_MatCapTex"
            ],
            "propertyType": "2D",
            "description": "Matcap texture map",
            "defaultValue": "black",
            "usageNotes": "Texture that defines the matcap effect across the surface."
        },
        {
            "canonicalName": "MatCapMask",
            "aliases": [
                "_UseMatCapMask"
            ],
            "propertyType": "Boolean",
            "description": "Controls whether to use a mask for matcap effect",
            "defaultValue": "0",
            "usageNotes": "When enabled, matcap effect can be masked using a texture."
        },
        {
            "canonicalName": "MatCapMaskTexture",
            "aliases": [
                "_MatCapMask"
            ],
            "propertyType": "2D",
            "description": "Matcap mask texture",
            "defaultValue": "black",
            "usageNotes": "Texture that defines where the matcap effect appears on the surface."
        },
        {
            "canonicalName": "ReflectionColor",
            "aliases": [
                "_ReflectionColor"
            ],
            "propertyType": "Color",
            "description": "The color of reflections",
            "defaultValue": "(1,1,1,1)",
            "usageNotes": "Defines the color of the material's reflections."
        },
        {
            "canonicalName": "ReflectionSmoothness",
            "aliases": [
                "_ReflectionSmoothness"
            ],
            "propertyType": "Float",
            "description": "Controls the smoothness of reflections",
            "defaultValue": "0.5",
            "usageNotes": "Determines how clear or blurred the reflections appear."
        },
        {
            "canonicalName": "FresnelMin",
            "aliases": [
                "_FresnelMin"
            ],
            "propertyType": "Float",
            "description": "Controls the minimum value for Fresnel effect",
            "defaultValue": "0",
            "usageNotes": "Determines the lowest intensity of the Fresnel effect."
        },
        {
            "canonicalName": "FresnelMax",
            "aliases": [
                "_FresnelMax"
            ],
            "propertyType": "Float",
            "description": "Controls the maximum value for Fresnel effect",
            "defaultValue": "1.5",
            "usageNotes": "Determines the highest intensity of the Fresnel effect."
        },
        {
            "canonicalName": "OcclusionStrength",
            "aliases": [
                "_OcclusionStrength"
            ],
            "propertyType": "Float",
            "description": "Controls the strength of ambient occlusion",
            "defaultValue": "1.0",
            "usageNotes": "Determines how strong the ambient occlusion effect is. 0 means no occlusion, 1 means full occlusion.\n\nVisual Characteristics:\n- At 0: No ambient occlusion effect\n- At 1: Full ambient occlusion effect\n- In Toony Colors Pro, this can be used to create stylized occlusion effects\n- In MK Toon, this interacts with the indirect lighting calculations"
        },
        {
            "canonicalName": "OcclusionMap",
            "aliases": [
                "_OcclusionMap"
            ],
            "propertyType": "2D",
            "description": "Ambient occlusion texture map",
            "defaultValue": "white",
            "usageNotes": "Texture that defines variations in ambient occlusion across the surface.\n\nVisual Characteristics:\n- White areas in the texture correspond to no occlusion\n- Black areas correspond to full occlusion\n- In Toony Colors Pro, this can be used to create stylized occlusion effects\n- In MK Toon, this interacts with the indirect lighting calculations"
        },
        {
            "canonicalName": "OcclusionChannel",
            "aliases": [
                "_OcclusionChannel"
            ],
            "propertyType": "Enum",
            "description": "Controls which channel of the occlusion map to use",
            "defaultValue": "0",
            "usageNotes": "Determines which texture channel (R, G, B, A) to use for occlusion.\n\nVisual Characteristics:\n- Red: Uses the red channel\n- Green: Uses the green channel\n- Blue: Uses the blue channel\n- Alpha: Uses the alpha channel\n- In Toony Colors Pro, this can be used to create different occlusion effects"
        },
        {
            "canonicalName": "OutlineTextureType",
            "aliases": [
                "_OutlineTextureType"
            ],
            "propertyType": "Enum",
            "description": "Controls the type of outline texture to use",
            "defaultValue": "0",
            "usageNotes": "This determines how the outline texture is sampled and applied.\n\nVisual Characteristics:\n- Vertex Shader: Samples the texture at the vertex level, faster but loses precision\n- Pixel Shader: Samples the texture for each pixel, slower but shows more detail\n- In Toony Colors Pro, this can be used to create different outline effects\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "OutlineTextureLOD",
            "aliases": [
                "_OutlineTextureLOD"
            ],
            "propertyType": "Float",
            "description": "Controls the LOD level of outline texture",
            "defaultValue": "5",
            "usageNotes": "This value determines which mip level of the outline texture to sample.\n\nVisual Characteristics:\n- Lower values: Shows more detail but can be noisy\n- Higher values: Shows less detail but is smoother\n- In Toony Colors Pro, this can be used to create different outline styles\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "OutlinePixelSizeType",
            "aliases": [
                "_OutlinePixelSizeType"
            ],
            "propertyType": "Enum",
            "description": "Controls the type of outline pixel size",
            "defaultValue": "0",
            "usageNotes": "This determines how the outline size behaves in screen space.\n\nVisual Characteristics:\n- Disabled: No pixel size correction\n- Constant: Outline always has defined width in pixels\n- Minimum: Outline has minimum pixel size on screen\n- Min Max: Outline has minimum and maximum pixel size on screen\n- In Toony Colors Pro, this can be used to create consistent outline effects\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "OutlineMinWidth",
            "aliases": [
                "_OutlineMinWidth"
            ],
            "propertyType": "Float",
            "description": "Controls the minimum width of outline in pixels",
            "defaultValue": "1",
            "usageNotes": "This value determines the thinnest the outline can be.\n\nVisual Characteristics:\n- Lower values: Thinner outlines\n- Higher values: Thicker outlines\n- In Toony Colors Pro, this can be used to create different outline styles\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "OutlineMaxWidth",
            "aliases": [
                "_OutlineMaxWidth"
            ],
            "propertyType": "Float",
            "description": "Controls the maximum width of outline in pixels",
            "defaultValue": "1",
            "usageNotes": "This value determines the thickest the outline can be.\n\nVisual Characteristics:\n- Lower values: Thinner outlines\n- Higher values: Thicker outlines\n- In Toony Colors Pro, this can be used to create different outline styles\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "NormalsSource",
            "aliases": [
                "_NormalsSource"
            ],
            "propertyType": "Enum",
            "description": "Controls the source of outline normals",
            "defaultValue": "0",
            "usageNotes": "This determines where to get the normals for outline effect.\n\nVisual Characteristics:\n- Normal: Uses standard normals\n- Vertex Colors: Uses vertex colors as normals\n- Tangents: Uses tangent space normals\n- UV1-UV4: Uses UV channels as compressed normals\n- In Toony Colors Pro, this can be used to create different outline styles\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "NormalsUVType",
            "aliases": [
                "_NormalsUVType"
            ],
            "propertyType": "Enum",
            "description": "Controls the type of UV data for normals",
            "defaultValue": "0",
            "usageNotes": "This determines how UV data is stored for normals.\n\nVisual Characteristics:\n- Full XYZ: Stores full normal vector\n- Compressed XY: Stores XY components\n- Compressed ZW: Stores ZW components\n- In Toony Colors Pro, this can be used to create different outline styles\n- In FlatKit, this can be used to create cel-style outline variations"
        },
        {
            "canonicalName": "IndirectIntensity",
            "aliases": [
                "_IndirectIntensity"
            ],
            "propertyType": "Float",
            "description": "Controls the intensity of indirect lighting",
            "defaultValue": "1",
            "usageNotes": "This value determines how strong the indirect lighting effect appears.\n\nVisual Characteristics:\n- At 0: No indirect lighting\n- At 1: Full indirect lighting\n- In Toony Colors Pro, this can be used to create different lighting effects\n- In MK Toon, this interacts with the global illumination calculations"
        },
        {
            "canonicalName": "SingleIndirectColor",
            "aliases": [
                "_SingleIndirectColor"
            ],
            "propertyType": "Boolean",
            "description": "Controls whether to use a single color for indirect lighting",
            "defaultValue": "0",
            "usageNotes": "When enabled, uses a single color for all indirect lighting.\n\nVisual Characteristics:\n- Disabled: Uses full indirect lighting with color variation\n- Enabled: Uses a single color for indirect lighting\n- In Toony Colors Pro, this can be used to create stylized lighting effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "UseReflections",
            "aliases": [
                "_UseReflections"
            ],
            "propertyType": "Boolean",
            "description": "Controls whether to enable environment reflections",
            "defaultValue": "0",
            "usageNotes": "When enabled, the material will show environment reflections.\n\nVisual Characteristics:\n- Disabled: No environment reflections\n- Enabled: Shows environment reflections\n- In Toony Colors Pro, this can be used to create stylized reflection effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "UseFresnelReflections",
            "aliases": [
                "_UseFresnelReflections"
            ],
            "propertyType": "Boolean",
            "description": "Controls whether to enable Fresnel-based reflections",
            "defaultValue": "1",
            "usageNotes": "When enabled, reflections are stronger at grazing angles.\n\nVisual Characteristics:\n- Disabled: Uniform reflections\n- Enabled: Stronger reflections at grazing angles\n- In Toony Colors Pro, this can be used to create stylized reflection effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "ReflectionMapType",
            "aliases": [
                "_ReflectionMapType"
            ],
            "propertyType": "Enum",
            "description": "Controls the type of reflection map to use",
            "defaultValue": "0",
            "usageNotes": "This determines what channel of the reflection map to use.\n\nVisual Characteristics:\n- Disabled: No reflection map\n- Albedo Alpha: Uses alpha channel of albedo\n- Custom R: Uses red channel\n- Custom G: Uses green channel\n- Custom B: Uses blue channel\n- Custom A: Uses alpha channel\n- In Toony Colors Pro, this can be used to create different reflection effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "ReflectionTex",
            "aliases": [
                "_ReflectionTex"
            ],
            "propertyType": "2D",
            "description": "Reflection texture map",
            "defaultValue": "white",
            "usageNotes": "Texture that defines variations in reflection across the surface.\n\nVisual Characteristics:\n- White areas: Full reflection\n- Black areas: No reflection\n- In Toony Colors Pro, this can be used to create stylized reflection effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "MatCapType",
            "aliases": [
                "_MatCapType"
            ],
            "propertyType": "Enum",
            "description": "Controls the type of matcap blending",
            "defaultValue": "0",
            "usageNotes": "This determines how matcap effect is blended.\n\nVisual Characteristics:\n- Additive: Adds matcap color to base color\n- Replace: Replaces base color with matcap color\n- In Toony Colors Pro, this can be used to create different matcap effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "MatCapMaskChannel",
            "aliases": [
                "_MatCapMaskChannel"
            ],
            "propertyType": "Enum",
            "description": "Controls which channel of the matcap mask to use",
            "defaultValue": "0",
            "usageNotes": "This determines which texture channel to use for matcap mask.\n\nVisual Characteristics:\n- Red: Uses the red channel\n- Green: Uses the green channel\n- Blue: Uses the blue channel\n- Alpha: Uses the alpha channel\n- In Toony Colors Pro, this can be used to create different matcap effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "EmissionChannel",
            "aliases": [
                "_EmissionChannel"
            ],
            "propertyType": "Enum",
            "description": "Controls which channel of the emission map to use",
            "defaultValue": "4",
            "usageNotes": "This determines which texture channel to use for emission.\n\nVisual Characteristics:\n- Red: Uses the red channel\n- Green: Uses the green channel\n- Blue: Uses the blue channel\n- Alpha: Uses the alpha channel\n- RGB: Uses all color channels\n- In Toony Colors Pro, this can be used to create different emission effects\n- In MK Toon, this affects the global illumination calculations"
        },
        {
            "canonicalName": "SpecularMapType",
            "aliases": [
                "_SpecularMapType"
            ],
            "propertyType": "Enum",
            "description": "Controls the type of specular map to use",
            "defaultValue": "0",
            "usageNotes": "This determines how the specular map is applied.\n\nVisual Characteristics:\n- In Toony Colors Pro, this can be used to create different specular effects\n- In MK Toon, this affects the global illumination calculations"
        }
    ]
}